[{"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\index.tsx":"1","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\MainMenu\\MainMenu.tsx":"3","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\HomePage.tsx":"4","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\ContactPage\\ContactPage.tsx":"5","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\AboutUsPage\\AboutUsPage.tsx":"6","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\Category\\CategoryPage.tsx":"7","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\UserLoginPage\\UserLoginPage.tsx":"8","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\api\\api.tsx":"9","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\config\\ApiConfig.tsx":"10","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\UserRegistrationPage\\UserRegistrationPage.tsx":"11"},{"size":1904,"mtime":1611183863428,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1685,"mtime":1609783725738,"results":"15","hashOfConfig":"13"},{"size":2361,"mtime":1611183862487,"results":"16","hashOfConfig":"13"},{"size":1626,"mtime":1610896576444,"results":"17","hashOfConfig":"13"},{"size":805,"mtime":1609017011096,"results":"18","hashOfConfig":"13"},{"size":12553,"mtime":1614372938472,"results":"19","hashOfConfig":"13"},{"size":4140,"mtime":1611183865226,"results":"20","hashOfConfig":"13"},{"size":3458,"mtime":1610896574963,"results":"21","hashOfConfig":"13"},{"size":146,"mtime":1611183865415,"results":"22","hashOfConfig":"13"},{"size":7240,"mtime":1610896573473,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"14bqd3n",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\index.tsx",[],["48","49"],"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\reportWebVitals.ts",[],"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\MainMenu\\MainMenu.tsx",[],"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\HomePage.tsx",[],"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\ContactPage\\ContactPage.tsx",[],"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\AboutUsPage\\AboutUsPage.tsx",[],"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\Category\\CategoryPage.tsx",[],"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\UserLoginPage\\UserLoginPage.tsx",[],"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\api\\api.tsx",["50","51"],"import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { ApiConfig } from '../config/ApiConfig';\r\n\r\nexport default function api(path: string, method: 'get' | 'post' | 'put' | 'patch' | 'delete', body: any | undefined){\r\n\r\n    return new Promise<ApiResponse>((resolve) => {\r\n        \r\n        const requestData: AxiosRequestConfig = {\r\n            method: method,\r\n            url: path,\r\n            baseURL: ApiConfig.API_URL,\r\n            data: JSON.stringify(body),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': getToken()            }\r\n        };\r\n\r\n        axios(requestData)\r\n        .then(res => responseHandler(res, resolve))\r\n        .catch(async err => {\r\n   \r\n            console.log(requestData.data);\r\n\r\n            const response: ApiResponse = {\r\n                status: 'error',\r\n                data: err\r\n            };\r\n\r\n            return resolve(response);\r\n        });\r\n    });\r\n    \r\n}\r\n\r\nfunction getToken(): string{\r\n    const token = localStorage.getItem('api_token');\r\n    return 'Berer ' + token;\r\n}\r\n\r\nexport function saveToken(token: string): void{\r\n    localStorage.setItem('api_token', token)\r\n}\r\n\r\nfunction getRefreshtoken(): string{\r\n    const token = localStorage.getItem('api_refresh_token');\r\n    return token + '';\r\n}\r\n\r\nexport function saveRefreshToken(token: string): void{\r\n    localStorage.setItem('api_refresh_token', token)\r\n}\r\n\r\nasync function responseHandler(res: AxiosResponse<any>, resolve: (value: ApiResponse) => void){\r\n\r\n    if(res.status < 200 || res.status >= 300){\r\n\r\n        const response: ApiResponse = {\r\n            status: 'error',\r\n            data: res.data\r\n        };\r\n\r\n        return resolve(response);\r\n    }\r\n    \r\n    if(res.data.statusCode < 0){\r\n        const response: ApiResponse = {\r\n            status: 'ok',\r\n            data: res.data\r\n        };\r\n\r\n        return resolve(response);\r\n    }\r\n\r\n    const response: ApiResponse = {\r\n        status: 'ok',\r\n        data: res.data\r\n    };\r\n\r\n    return resolve(response)\r\n}\r\n\r\nexport interface ApiResponse{\r\n    status: 'ok' | 'error' | 'login';\r\n    data: any;\r\n}\r\n\r\nasync function refreshToken(): Promise<string | null>{\r\n\r\n    const path = 'auth/user/refresh';\r\n    const data = {\r\n        token: getRefreshtoken()\r\n    };\r\n\r\n    const refreshTokenRequestData: AxiosRequestConfig = {\r\n\r\n        method: 'post',\r\n        url: path,\r\n        baseURL: ApiConfig.API_URL,\r\n        data: JSON.stringify(data),\r\n        headers: {\r\n            'Content-Type': 'aplication/json'\r\n        }\r\n    }\r\n\r\n    const refreshTokenResponse: {data: {token: string | undefined } } = await axios(refreshTokenRequestData);\r\n\r\n    if(!refreshTokenResponse.data.token){\r\n        return null;\r\n    }\r\n\r\n    return refreshTokenResponse.data.token;\r\n\r\n}\r\n\r\nasync function repeatRequest(requestData: AxiosRequestConfig, resolve: (value: ApiResponse) => void){\r\n\r\n    axios(requestData).then(res =>{\r\n        if(res.status === 401){\r\n            const response: ApiResponse = {\r\n                status: 'login',\r\n                data: null\r\n            }\r\n            return resolve(response);\r\n        }\r\n\r\n        const response: ApiResponse = {\r\n            status: 'ok',\r\n            data: res\r\n        }\r\n\r\n        return resolve(response);\r\n    }).catch(err => {\r\n        const response: ApiResponse = {\r\n            status: 'error',\r\n            data: err\r\n        }\r\n        return resolve(response);\r\n    })\r\n}","C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\config\\ApiConfig.tsx",[],"C:\\Users\\DT User6\\Desktop\\MT JS\\nest projekat\\front-end\\src\\UserRegistrationPage\\UserRegistrationPage.tsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":87,"column":16,"nodeType":"58","messageId":"59","endLine":87,"endColumn":28},{"ruleId":"56","severity":1,"message":"60","line":115,"column":16,"nodeType":"58","messageId":"59","endLine":115,"endColumn":29},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'refreshToken' is defined but never used.","Identifier","unusedVar","'repeatRequest' is defined but never used.","no-global-assign","no-unsafe-negation"]